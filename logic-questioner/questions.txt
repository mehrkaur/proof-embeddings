[
    {'question': "Prove that (pvq)v(pv~q) is a tautology.",
     'answer': 'T',
     'difficulty': 'mild',
     'solution': ['(pvq)v(pv~q)','pvqvpv~q','pvpvqv~q','pvpvT','T']},
    {'question': "Prove that ((p->r)^(q->r)^(pvq))->r is a tautology.",
     'answer': 'T',
     'difficulty': 'spicy',
     'solution': ['((~pvr)^(q->r)^(pvq))->r','((~pvr)^(~qvr)^(pvq))->r','((rv(~p^~q))^(pvq))->r','~((rv(~p^~q))^(pvq))vr','(~(rv(~p^~q))v~(pvq))vr','((~r^~(~p^~q))v~(pvq))vr','((~r^(pvq))v~(pvq))vr','~r^(pvq))v~(pvq)vr','rv(~r^(pvq))v~(pvq)','((rv~r)^(rv(pvq)))v(pvq)','T^(rv(pvq)))v~(pvq)','(rv(pvq))v~(pvq)','rv(pvq)v~(pvq)','rvT','T']},
    {'question': "Prove that (~(~p))<->p is a tautology.",
     'answer': 'T',
     'difficulty': 'mild',
     'solution': ['(~(~p))<->p','p<->p','(p->p)^(p->p)','p->p','pv~p','T']},
    {'question': "Prove that ((p->q)^(q->r))->(p->r) is a tautology.",
     'answer': 'T',
     'difficulty': 'spicy',
     'solution': ['Solution not yet available.']},
    {'question': "Prove that F->T is a tautology.",
     'answer': 'T',
     'difficulty': 'mild',
     'solution': ['F->T','Tv~F','T']},
    {'question': "Prove that (p^q)v(~pv(p^~q)) is a tautology.",
     'answer': 'T',
     'difficulty': 'medium',
     'solution': ['(p^q)v(~pv(p^~q))','(p^q)v((~pvp)^(~pv~q))','(p^q)v(T^(~pv~q))','((p^q)vT)^((p^q)v(~pv~q))','T^((p^q)v(~pv~q))','T^T','T']},
    {'question': "Prove that ((pvq)^(rv~q))->(pvr) is a tautology.",
     'answer': 'T',
     'difficulty': 'spicy',
     'solution': ['Solution not yet available.']},
    {'question': "Prove that (p^q)->(pvq) is a tautology.",
     'answer': 'T',
     'difficulty': 'mild',
     'solution': ['(p^q)->(pvq)','(pvq)v~(p^q)','(pvq)v(~pv~q)','pvqv~pv~q','T']},
    {'question': "Prove that q->(p->q) is a tautology.",
     'answer': 'T',
     'difficulty': 'mild',
     'solution': ['q->(p->q)','~qv(p->q)','~qv(~pvq)','~qv~pvq','~qvqv~p','Tv~p','T']},
    {'question': "Prove that p^~(p^~q)<->p^q is a tautology.",
     'answer': 'T',
     'difficulty': 'spicy',
     'solution': ['p^~(p^~q)<->p^q','(p^(~pvq))<->(p^q)','((p^~p)v(p^q))<->(p^q)','Fv(p^q))<->(p^q)','(p^q)<->(p^q)','((p^q)->(p^q))^((p^q)->(p^q))','(p^q)->(p^q)','~(p^q)v(p^q)','T']},
    {'question': "Prove that ~(p->q)^(p^q^s->r)^p is a fallacy.",
     'answer': 'F',
     'difficulty': 'spicy',
     'solution': ['Solution not yet available.']},
    {'question': "Prove that (~qvq)^~r^p^r is a fallacy.",
     'answer': 'F',
     'difficulty': 'medium',
     'solution': ['(~qvq)^~r^p^r','T^~r^p^r','T^p^~r^r','T^p^(~r^r)','T^p^F','F']},
    {'question': "Prove that ~r^((~pvp)^r)^(p->r) is a fallacy.",
     'answer': 'F',
     'difficulty': 'medium',
     'solution': ['~r^((~pvp)^r)^(p->r)','~r^((~pvp)^r)^(p->r)','~r^(T^r)^(rv~p)','~r^r^T^(rv~p)','F^T^(rv~p)','F']},
    {'question': "Prove that s^((~s^~q)v(~s^~T))^p is a fallacy.",
     'answer': 'F',
     'difficulty': 'spicy',
     'solution': ['s^((~s^~q)v(~s^~T))^p','s^((~s^~q)vF)^p','s^(~s^~q)^p','(s^~s)^~q^p','F^~q^p','F']},
    {'question': "Prove that (p->q)^(q->r) is logically equivalent to p->(q^r).",
     'answer': 'p->(q^r)',
     'difficulty': 'medium',
     'solution': ['(p->q)^(q->r)','(p->q)^[(p->q)^(q->r)]','(p->q)^(p->r)','(~pvq)^(~pvr)','~pv(q^r)','p->(q^r)']},
    {'question': "Prove that ~(~((q^r)v(q^~r))^p) is logically equivalent to p->q.",
     'answer': 'p->q',
     'difficulty': 'spicy',
     'solution': ['~(~((q^r)v(q^~r))^p)','~(~(q^(rv~r))^p)','~(~(q^T)^p)','~(~q^p)','qv~p','p->q']},
    {'question': "Prove that qv(p^~q) is logically equivalent to ~p->q.",
     'answer': '~p->q',
     'difficulty': 'mild',
     'solution': ['qv(p^~q)','(qvp)^(qv~q)','(qvp)^T','qvp','~p->q']},
    {'question': "Prove that ~(~(((~p^s)v((~p^T)^~s))^p)^~p) is logically equivalent to p.",
     'answer': 'p',
     'difficulty': 'spicy',
     'solution': ['~(~(((~p^s)v((~p^T)^~s))^p)^~p)','(((~p^s)v((~p^T)^~s))^p)vp','(((~p^s)v(~p^T^~s))^p)vp','((p^(~p^s))v(p^(~p^~s)))vp','(FvF)vp','Fvp','p']},
    {'question': "Prove that ~(q^~p)^(qv~p) is logically equivalent to p<->q.",
     'answer': 'pâ†”q',
     'difficulty': 'mild',
     'solution': ['~(q^~p)^(qv~p)','(~qvp)^(qv~p)','(q->p)^(qv~p)','(q->p)^(p->q)','p<->q']},
    {'question': "Prove that ~(~r^~(~(p^(qvq)))) is logically equivalent to (p^q)->r.",
     'answer': '(p^q)->r',
     'difficulty': 'spicy',
     'solution': ['~(~r^~(~(p^q)))','~(~r^(p^q))','rv~(p^q)','(p^q)->r']},
    {'question': "Prove that (p->q)->((p->q)->q) is logically equivalent to (pvq).",
     'answer': '(pvq)',
     'difficulty': 'medium',
     'solution': ['(p->q)->((p->q)->q)','~(p->q)v((p->q)->q)','~(p->q)v(~(p->q)vq)','~(p->q)v~(p->q)vq','~(p->q)vq','~(~pvq)vq','(p^~q)vq','qv(p^~q)','(qvp)^(qv~q)','(qvp)^T','qvp','pvq']},
    {'question': "Prove that (pvq)^(pv~q) is logically equivalent to p.",
     'answer': 'p',
     'difficulty': 'medium',
     'solution': ['(pvq)^(pv~q)','pv(q^~q)','pvF','p']},
    {'question': "Prove that ~(p^~q)vq is logically equivalent to ~pvq.",
     'answer': '~pvq',
     'difficulty': 'mild',
     'solution': ['~(p^~q)vq','(~pvq)vq)','~pvqvq','~pvq']},
    {'question': "Prove that ~(p^q)^(pv~q) is logically equivalent to ~q.",
     'answer': '~q',
     'difficulty': 'mild',
     'solution': ['~(p^q)^(pv~q)','(~pv~q)^(pv~q)','~qv(~p^p)','~qvF','~q']},
    {'question': "Prove that (pvq)^(~p->~q) is logically equivalent to p.",
     'answer': 'p',
     'difficulty': 'medium',
     'solution': ['(pvq)^(~p->~q)','(pvq)^(~(~p)v~q)','(pvq)^(pv~q)','pv(q^~q)','pvF','p ']}
    {'question': "Prove that ~((p->q)vq) is logically equivalent to ~q^p.",
     'answer': '~q^p',
     'difficulty': 'mild',
     'solution': ['~((p->q)vq)','~((qv~p)vq)','~(qv~p)','~q^p']}
]
